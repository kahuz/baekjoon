//
// 13458 시험 감독
//
// 조건
// - N개의 시험장이 있고, 각 시험장마다 응시자들이 있다.
// - i번 시험장에 있는 응시자의 수는 Ai 명이다.
// - 감독관은 총감독관과 부감독관으로 두 종류가 있고, 총감독관은 한 시험장에서 B명을 감시, 부감독관은 한 시험장에서 C명을 감시한다
// - 총 감독관은 "시험장 마다 1명"이며 부감독관은 여러명이 있을 수 있다.
// - 각 시험장마다 응시생을 모두 감시해야할때 필요한 감독관 수의 최솟값을 구하시오
// - 제한시간 2초
//
// 입력
// - 첫째줄 : 시험장의 개수 N ( 1 <= N <= 1000000)
// - 둘째줄 : 각 시험장에 있는 응시자의 수 Ai ( 1 <= Ai <= 1000000)
// - 셋째줄 : 감독관이 감시하는 응시생 수 B와 C ( 1<= B,C <= 1000000)
//
// 접근
// - 감독관이 감시해야할 시험장의 수가 최대 100만개이므로 시간초과에 주의하여 접근
// - "시험장의 개수가 백만" , "응시자 수가 백만", "각 감독관이 1명만 체크가능하다면?" 최악의 경우 총 1조라는 값이 된다

#include <iostream>

using namespace std;
//시험장 별 응시생 수를 저장할 배열 선언 및 초기화
int A[1000000] = { 0 };

//입력값에 대한 변수 선언 및 초기화
int N = 0, B = 0, C = 0;
//결과 변수 선언 및 초기화
long long res = 0;

void solution()
{
	//시험장에 대해 탐색
	for (int i = 0; i < N; i++)
	{
		//응시생이 총감독관의 재량보다 많다면
		//B만큼 빼주고 결과값 +1
		if (A[i] >= B)
		{
			A[i] -= B;
			res += 1;
		}
		//응시생이 총감독관의 재량보다 적으면서
		//총감독관의 재량이 부감독관보다 높다면
		//응시생을 0으로 만들고 결과값 +1
		//부감독관이 총감독관보다 재량이 높다면 아래 루틴에서 처리됨
		else if (B > C)
		{
			A[i] = 0;
			res += 1;
		}
	}
	//시험장에 대해 재탐색
	//위의 탐색에서 총감독관에 대한 처리를 모두 하였으므로
	//나머지 응시생에 대해 부감독관을 배치하면 된다
	for (int i = 0; i < N; i++)
	{
		int sub_ins = A[i] / C;
		int rest = A[i] % C;

		if (rest > 0)
			sub_ins += 1;

		res += sub_ins;
	}
}

int main(void)
{
	//시험장 값을 입력받는다
	cin >> N;
	//시험장별 응시생 값을 입력받는다
	for (int i = 0; i < N; i++)
		cin >> A[i];
	//총감독관과 부감독관의 재량을 입력받는다
	cin >> B >> C;
	//풀이 시작
	solution();
	//결과 출력
	cout << res << endl;
}