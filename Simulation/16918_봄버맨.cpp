//
// 조건
// - 봄버맨은 크기가 RxC인 직사각형 격자판 위에 살고 있다
// - 격자의 각 칸은 비어있거나'.' 폭탄'o'이 들어있다
// - 폭탄이 있는 칸은 3초가 지난 후에 폭발하고, 폭단탄이 폭발한 이후에는 칸이 비칸이 되며, 인접한 네 칸도 함께 파괴된다
// - *폭탄이 폭발했을때 인접한 칸에 폭탄이 있을 경우 인접한 폭탄은 폭발없이 파괴된다(연쇄반응 X)
// - 봄버맨은 폭탄에 면역력을 가지고 있어서 격자판의 모든 칸을 자유롭게 이동할 수 있다
// - 봄버맨의 행동은 아래와 같다
//	->1 가장 처음 봄버맨은 일부 칸에 폭탄을 설치해놓으며, 모든 폭탄이 서치된 시간은 같다
//	->2 다음 1초 동안 봄버맨은 아무것도 하지 않는다
//	->3 다음 1초 동안 폭탄이 설치되어 있지 않은 모든 칸에 폭탄을 설치한다. 즉, 모든 칸은 폭탄을 가지고 있게 된다
//	->4 1초가 지난 후에 3초전에 설치된 폭탄이 모두 폭발한다
//	->5 3과 4를 반복한다
// - 폭탄을 설치해놓은 초기 상태가 주어졌을 때, N초가 흐른 후의 격자판의 상태를 구하라
//
// 입력
// - 첫째줄 : 격자 크기 R과 C, 격자판 상태를 확인할 시간 N ( 1<= R,C,N <=200 ) 이 주어진다
// - 둘째줄 이후 : R개의 줄에 격자판 초기 상태가 주어진다
//
#include <iostream>

using namespace std;
//초기 맵 상태
char map[200][200] = { 0 };
//초기 시한폭탄 상태
int time[200][200] = { 0 };
//주변 4방위 접근을 위한 배열
int dx[4] = { 0,1,0,-1 };
int dy[4] = { -1,0,1,0 };
//?값
int R = 0, C = 0, N = 0;

//param t : 폭탄 설치 시간값, 폭탄은 현재 시간으로부터 3초뒤에 터진다
void set_bomb(int t)
{
	for (int y = 0; y < R; y++)
	{
		for (int x = 0; x < C; x++)
		{
			if (map[y][x] == '.')
			{
				//빈칸에 폭탄을 설치, 각 폭탄은 현재시간으로부터 +3초 설정
				map[y][x] = 'O';
				time[y][x] = t + 3;
			}
		}
	}
}

void explode_bomb(int t)
{
	for (int y = 0; y < R; y++)
	{
		for (int x = 0; x < C; x++)
		{
			//탐색 위치에 현재 시간과 같은 폭탄이 있다면
			if (time[y][x] == t)
			{
				//현재 위치로부터 4방위를 터트려준다
				for (int i = 0; i < 4; i++)
				{
					int xn = x + dx[i];
					int yn = y + dy[i];

					if (xn < 0 || xn >= C || yn < 0 || yn >= R || map[yn][xn] == '.')	continue;

					map[yn][xn] = '.';
				}
				//터진 위치에 대한 설정 초기화
				map[y][x] = '.';
				time[y][x] = 0;
			}
		}
	}
}

void play()
{
	//t++를 위해 초기값 0으로 설정
	int t = 0;

	while (true)
	{
		t++;
		//시간이 짝수일땐 폭탄을 설치
		if (t % 2 == 0)
			set_bomb(t);
		//시간이 초기상태와 1초가 아니며, 홀수의 시간일때 폭탄 펑
		else if( t > 1 && t % 2 == 1)
			explode_bomb(t);
		//모든 과정을 거치고 난 뒤 현재 시간이 설정한 시간이라면 멈춤
		if (t == N) break;
	}
	//현재 상태에 대해 출력하자
	for (int y = 0; y < R; y++)
	{
		for (int x = 0; x < C; x++)
			cout << map[y][x];

		cout << "\n";
	}
}
int main(void)
{
	//초기 맵 상태 및 맵 확인 시간을 받아온다
	cin >> R >> C >> N;

	//초기 맵 상태를 받아온다
	for (int i = 0; i < R; i++)
	{
		for (int j = 0; j < C; j++)
		{
			cin >> map[i][j];
			//초기 맵에 폭탄이 설치되어있다면 3초뒤에 터트리기 위해 시간 설정
			if (map[i][j] == 'O')
				time[i][j] = 3;
		}
	}
	//시작
	play();

	return 0;
}